"""
это генератор суммы n элементов последовательности типа 1/1, -1/3, 1/5, -1/7, 1/9,
"""
from math import pi # для получения значения числа пи

class QuaPiSum:
    """
    итератор, возвращающий сумму первых n элементов
    последовательности -1**n / (2n + 1) для
    всех натуральный n меньше заданного
    """

    def __init__(self, count):
        self.__elem = ((1 - 2 * (i % 2)) / (2.0 * i + 1.0) for i in range(count))
        self.__result = 0

    def __iter__(self):
        return self

    def __next__(self):
        self.__result += next(self.__elem)
        return self.__result


# -------------------------------------------------------------------------------
def main():
    """
    демонстрация работы итератора
    """
    iterable_sum = QuaPiSum(20)
    print(
        "сумма первых n элементов последовательности"
        " -1**n / (2n + 1 для n от 1 до 20:"
    )
    for approx in iterable_sum:
        print(f"текущая сумма: {approx : 0.3f}, ошибка приближения к pi/4 : "
              f"{100.*abs(4.*approx - pi)/pi:0.0f}%")


# ===============================================================================
if __name__ == "__main__":
    main()
