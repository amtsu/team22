#!/usr/local/bin/python
# coding: utf-8
"""
это генератор последовательности типа 1/1, -1/3, 1/5, -1/7, 1/9, -1/11
"""


class QuaPiRow:
    """
    итератор, возвращающий элементы последовательности -1**n / (2n + 1) для
    всех натуральный n меньше заданного
    """

    def __init__(self, count):
        """
        инициализация. создаю генератор последовательности на основе range
        """
        self.__result = (f"{(1 - 2*(i%2))}/{2*i+1}" for i in range(count))

    def __iter__(self):
        """
        так как итератор - итерируемый объект (лол),
        возвращаю просто сам объект
        """
        return self

    def __next__(self):
        """
        метод получения очередного значения
        так как я использую итератор, основанный на range, мне не нужно самому
        контролировать количество итераций и выбрасывать StopIteration - все само выполнится
        """
        return next(self.__result)
