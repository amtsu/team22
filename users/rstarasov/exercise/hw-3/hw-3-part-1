Задание: Ответьте письмено на вопросы дважды!
Выполнять это задание следует следующим образом.
Создаете папку аналогичную ~/github/tem22/users/amtsurkov/exercise/hw-3.
В папку копирует данный фаил.
Отвечаете по памямти, записывает свои ответы в фаил и комитите его.
Далее смотрите материалы, задает вопросы чату джипити, гуглу и т д.
И расширяете или меняте ответы на эти вопросы.
Опять комититие и пушите в репозиторий.

- С какой целью стоит изучать программирование?
(мой ответ) - Чтобы получить новую работу, изменить жизнь, да и вообще, мне нравится.
(ответ chatGPT) - Изучение программирования может быть полезным по многим причинам:
Карьерные возможности: Программирование - это востребованное и высокооплачиваемое направление. Знание программирования открывает двери к множеству интересных и перспективных карьерных возможностей в различных отраслях, таких как разработка программного обеспечения, аналитика данных, веб-разработка и многое другое.
Творческий потенциал: Программирование позволяет вам создавать что-то с нуля. Это как искусство, где вы можете выразить свои идеи и воплотить их в реальность через код.
Решение проблем: Навыки программирования помогают развивать логическое мышление и аналитические способности, что полезно не только в области технологий, но и в решении повседневных проблем.
Автоматизация: Знание программирования помогает автоматизировать повторяющиеся задачи и оптимизировать процессы, что экономит время и увеличивает эффективность.
Понимание технологий: В мире, где технологии играют все более важную роль, знание программирования поможет вам лучше понимать и взаимодействовать с технологическими инновациями.
Саморазвитие: Изучение программирования способствует постоянному обучению и развитию, поскольку технологии постоянно меняются и развиваются, и всегда есть что-то новое для изучения.
Это лишь некоторые из множества причин, по которым стоит изучать программирование.

- Что такое программа?
(мой ответ) - Алгоритм команд запускающий определенные этим алгоритмом действия.
(ответ chatGPT) - Программа - это последовательность инструкций, написанных на языке программирования, предназначенная для выполнения определенной задачи компьютером или другим устройством. Программы могут быть очень разнообразными и выполнять самые различные функции, от обработки текста до управления сложными вычислениями или управления оборудованием.
Программа состоит из инструкций, которые компьютер может понимать и выполнять по порядку. Эти инструкции могут включать в себя операции над данными (например, сложение чисел, сортировка массивов), операции управления потоком выполнения программы (например, условные операторы, циклы) и многое другое.
Программы обычно создаются программистами с использованием специальных интегрированных сред разработки (IDE) или текстовых редакторов, после чего они компилируются или интерпретируются в машинный код, который может быть понятен компьютеру.

- Зачем нужно уметь работать в консоли(команной строке - терминале)?
(мой ответ) - Работать в консоли быстрее, чем кликать мышкой в ОС; большая часть разработки ведется в среде Linux именно в консоли.
(chatGPT) - Консоль (командная строка) важна для быстрого и гибкого управления компьютером, автоматизации задач, доступа к расширенным функциям и управления удаленными серверами.

- Что такое программа?
(такой вопрос уже был)

- Зачем нужен язык программирования?
(мой ответ) - Чтобы эффективно программировать. Каждый новый язык программирования создают для решения определенных задач разработки, ускорения, и упрощения разработки; с помощью разных языков мы можем лучше решать различные задачи в процессе разработки.
(chatGPT) - Язык программирования нужен для:
Создания программного обеспечения.
Автоматизации задач.
Работы с данными.
Решения различных задач.
Развития технологий.
Это инструмент, который помогает программистам писать код, который компьютер может выполнить.

- Какие принципы из философии Python вы поомните? Прочитайте эти принципы еще раз и попробуйте по памяти их напсиать.
(мой ответ) - Просто - лучше, чем сложно; если реализацию просто объяснить, то эта реализация хороша; если реализацию сложно объяснить, то она плоха; что-то там было еще про голландцев.
(chatGPT) - 
Красивое лучше, чем уродливое.
Явное лучше, чем неявное.
Простое лучше, чем сложное.
Сложное лучше, чем запутанное.
Плоское лучше, чем вложенное.
Разреженное лучше, чем плотное.
Читаемость имеет значение.
Особые случаи не настолько особые, чтобы нарушать правила.
При нарушении правил явно указывайте на это.
Теперь лучше, чем никогда.
Хотя никогда зачастую лучше, чем прямо сейчас.
Если реализацию сложно объяснить — идея плоха.
Если реализацию легко объяснить — идея, возможно, хороша.
Пространства имен — отличная штука! Давайте делать их больше!

- Почему выбрали Python?
(мой ответ) - потому что курс Артема на этом языке, а с чего-то надо начинать. Да и с разных сторон слышал, что Python довольно универсальный язык, а мне как раз хочется посмотреть на сферу разработки с разных сторон.
(chatGPT) - Кратко говоря, Python - простой, мощный и широко используемый язык программирования с обширным сообществом разработчиков, богатой библиотекой и простым синтаксисом. Он подходит для различных задач, от веб-разработки до анализа данных, и позволяет быстро создавать эффективные приложения.

- Что такое Jupyter Notebook?
(мой ответ) - Удобная среда для запуска кода Python (возможно, и других языков).
(chatGPT) - Jupyter Notebook - это интерактивная среда для программирования, которая позволяет создавать и выполнять код, а также визуализировать данные в виде текста, графиков и других медиа-файлов, прямо в браузере. Он часто используется для научных исследований, анализа данных, машинного обучения и других вычислительных задач.

- Какие типы данных вы понминте?
(мой ответ) - Этот вопрос застал меня в расплох. Даже не знаю, что ответить.
(chatGPT) - Коротко о типах данных:
Числа: Включают целые числа (integer) и числа с плавающей запятой (float).
Строки: Последовательности символов, обычно используются для текста.
Списки: Упорядоченные коллекции элементов, которые могут содержать разные типы данных.
Кортежи: Неизменяемые упорядоченные коллекции элементов.
Словари: Набор пар ключ-значение для быстрого доступа к данным.
Множества: Коллекции уникальных элементов без упорядочения.
Булевые значения: Истина (True) или Ложь (False), используются для логических операций.
None: Специальное значение, обозначающее отсутствие значения или ничто.

- Какие есть математические операции в языке python?
(мой ответ) - Сложение, вычитание, деление, деление с выводом целого числа, деление с выводом остатка, умножение, возведение в степень. Это то, что я помню.
(chatGPT) - Коротко о математических операциях в Python:
Сложение (+): Складывает два числа или объединяет две строки.
Вычитание (-): Вычитает одно число из другого.
Умножение (*): Умножает два числа или повторяет строку заданное количество раз.
Деление (/): Делит одно число на другое, всегда возвращает число с плавающей запятой.
Целочисленное деление (//): Делит одно число на другое и возвращает целую часть результата.
Возведение в степень ():** Возводит число в указанную степень.
Остаток от деления (%): Возвращает остаток от деления одного числа на другое.
Кроме того, в Python также доступны математические функции в модуле math, такие как sqrt() (квадратный корень), sin() (синус), cos() (косинус) и многое другое.

- Какие операции с строками есть в языке python?
(мой ответ) - Сложение строк (прикрепление двух или более строк); вывод всех букв заглавными; начать строку с заглавной буквы; определить местоположение букв в строке; вывести определенные буквы, цифры, символы строки, и еще много чего, что я не знаю пока.
(chatGPT) - Коротко об операциях со строками в Python:
Конкатенация (+): Объединяет две строки в одну.
Умножение (*): Повторяет строку заданное количество раз.
Индексация ([]): Возвращает символ по указанному индексу.
Срезы ([start:end]): Возвращает подстроку в указанном диапазоне индексов.
Длина (len()): Возвращает количество символов в строке.
Методы строк: Например, split() разбивает строку на список подстрок по заданному разделителю, join() объединяет элементы списка в строку с указанным разделителем, upper() и lower() преобразуют строку в верхний и нижний регистры и т. д.
