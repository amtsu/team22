# Упражнения 1

# 1. Любимые вещи

# Создайте список своих любимых развлечений и сохраните его в пере- менной games. Теперь создайте список любимых
# лакомств, сохранив его в переменной foods. Объедините два этих списка, сохранив результат в переменной favorites,
# и напечатайте значение этой переменной.
games = ["skateboard", "volleyball", "rollerblade", "music", "snowboarding", ]
foods = ["pizza", "borsh", "sushi", "wok", "pasta", ]
favourites = games + foods
print(favourites)
print("\n")
# 2. Подсчет воинов

# Есть 3 дома, на крыше каждого из которых прячутся по 25 ниндзя, и есть 2 туннеля, в каждом из которых скрывается по
# 40 самураев. Сколько все- го воинов решили устроить заварушку? (Ответ можно найти, введя в обо- лочке Python
# арифметическое выражение.)
print(3 * 25 + 2 * 40)
print("\n")
# 3. Приветствие

# Создайте две переменные: пусть одна хранит ваше имя, а другая фами- лию. Теперь с помощью строки с метками %s
# напечатайте приветствие вроде такого: «Привет, Брандо Икетт!».
name = "Evgeny"
surname = "Nabatov"
print("Hello, {} {}!".format(name, surname))
print("\n")


# =================

# Упражнения 2

# Решите эти задачи, используя конструкции if и условия.

# 1. Вы богаты?

# Как думаете, что делает этот код? Сначала попробуйте в этом разобрать- ся, не вводя код в оболочку Python,
# а затем проверьте свой ответ.
def rich(money: int) -> str:
    result = ""
    if money > 1000:
        result = "Я богат!"
    else:
        result = "Я не богат!"
        result += "\nМожет, когда-нибудь потом..."
    print(result)


rich(1000)
print()
rich(10)
print()
rich(2000)
print("\n")


# 2. Бисквитики!

# Создайте конструкцию if, которая проверяет, действительно ли коли- чество бисквитов (которое задано в переменной
# twinkies) меньше 100 или больше 500. Если это условие выполняется, пусть ваша программа напечатает сообщение
# «Слишком мало или слишком много».
def cookies_rich(twinkies: int) -> str:
    result = ""
    if twinkies <= 100:
        result = "Слишком мало."
    elif twinkies >= 500:
        result = "Слишком много."
    else:
        result = "То, что надо!"
    print(result)


cookies_rich(55)
print()
cookies_rich(121)
print()
cookies_rich(666)
print("\n")


# 3. Подходящая сумма

# Создайте конструкцию if, которая проверяет, соответствует ли задан- ная в переменной money сумма денег диапазону
# значений от 100 до 500 или диапазону значений от 1000 до 5000.
def chiki_riki(money: int) -> str:
    result = ""
    if 100 <= money <= 500 or 1000 <= money <= 5000:
        result = "Соответствует"
    else:
        result = "Не соответствует"
    print(result)


chiki_riki(50)
print()
chiki_riki(150)
print()
chiki_riki(500)
print()
chiki_riki(550)
print()
chiki_riki(1050)
print()
chiki_riki(5000)
print()
chiki_riki(5050)
print("\n")


# 4. Я одолею этих ниндзя!

# Создайте конструкцию if, которая печатает строку «Их слишком мно- го», если количество ниндзя (заданное в
# переменной ninjas) меньше 50, печатает «Будет непросто, но я с ними разделаюсь», если это количество меньше 30,
# и печатает «Я одолею этих ниндзя!», если количество мень- ше 10. Проверьте, как ваш код работает с таким значением:

# ninjas = 5
def super_ninja(ninjas: int) -> str:
    result = ""
    if ninjas < 10:
        result = "Я одолею этих ниндзя!"
    elif ninjas < 30:
        result = "Будет не просто, но я с ними разделаюсь"
    else:
        result = "Их слишком много"
    print(result)


super_ninja(5)
print()
super_ninja(15)
print()
super_ninja(35)
print("\n")
# =================

# Упражнения 3

# 1. Цикл с приветом

# Как вы считаете, что делает эта программа? Сперва придумайте вариант ответа, а потом запустите код и проверьте,
# угадали ли вы.
for x in range(0, 20):
    print('привет %s' % x)
    if x < 9:
        break
print("\n")


# 2. Четные числа

# Создайте цикл, который печатает четные числа до тех пор, пока не выве- дет ваш возраст. Если ваш возраст —
# нечетное число, создайте цикл, ко- торый печатает нечетные числа до совпадения с возрастом. Программа должна
# выводить на экран нечто подобное:
# 2 4 6 8 10 12 14
def age():
    result = []
    for i in range(1, 100):
        if i == 27:
            break
        elif i % 2 == 0:
            result.append(i)
            i += 1
        else:
            i += 1
    print(result)


age()
print("\n")


# 3. Пять любимых ингредиентов

# Создайте список с пятью разными ингредиентами для бутерброда, наподобие:
# ingredients = ['слизни', 'пиявки', 'катышки из пупка гориллы', 'брови гусеницы', 'пальцы многоножки']

# Теперь создайте цикл, который печатает список ингредиентов с нумерацией:
# 1 слизни 2 пиявки 3 катышки из пупка гориллы 4 брови гусеницы 5 пальцы многоножки
def exotic() -> str:
    result = []
    ind = 0
    ingredients = [
        "mazik",
        "cheese",
        "kolbosa",
        "pomidor",
        "kepchuk",
    ]
    for i in range(1, 6):
        result += i, ingredients[ind]
        i += 1
        ind += 1
    print(result)


exotic()
print("\n")


# 4. Ваш лунный вес

# Если бы вы сейчас были на Луне, ваш вес составил бы 16,5 процентов от земного. Чтобы узнать, сколько это,
# умножьте свой земной вес на 0,165.

# Если бы каждый год в течение следующих 15 лет вы прибавляли по одному килограмму веса, каким бы оказался ваш
# лунный вес в каж- дый из ежегодных визитов на Луну вплоть до 15-го года? Напишите про- грамму, которая с помощью
# цикла for печатает на экране ваш лунный вес в каждом году.
def moon(ves: int) -> str:
    result = ves * 0.165
    for i in range(1, 16):
        result += float(1 * 0.165)
        i += 1
        print(f"{result:.2f}")


moon(60)
print("\n")


# =================

# Упражнения 4

# Вот несколько упражнений по созданию ваших соб- ственных функций.

# 1. Функция лунного веса

# Одним из заданий к главе 6 было создание цикла for для расчета вашего веса на Луне в течение 15 лет. Этот цикл
# можно оформить в виде функции. Создайте функцию, ко- торая принимает начальный вес и величину, на которую вес
# увеличивается каждый год. Вызывать эту новую функ- цию нужно будет примерно так:

# moon_weight(30, 0.25)
def moon_v2(ves: int, pribavka: float) -> str:
    result = ves * 0.165
    for i in range(1, 16):
        result += float(pribavka * 0.165)
        i += 1
        print(f"{result:.2f}")


moon_v2(60, 0.5)
print("\n")


# 2. Функция лунного веса и количество лет

# Измените функцию из предыдущего задания так, чтобы с ее помощью можно было рассчитывать вес для разного количества
# лет, например 5 или 20 лет. Пусть эта функция принимает три аргумента: начальный вес, прибавку веса в год и
# количество лет:
#  moon_weight(90, 0.25, 5)
def moon_v3(ves: int, pribavka: float, year: int) -> str:
    result = ves * 0.165
    for i in range(1, year + 1):
        result += float(pribavka * 0.165)
        i += 1
        print(f"{result:.2f}")


moon_v3(60, 0.5, 20)
