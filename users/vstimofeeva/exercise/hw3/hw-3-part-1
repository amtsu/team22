Задание: Ответьте письменно на вопросы дважды!
Выполнять это задание следует следующим образом.
Создаете папку аналогичную ~/github/tem22/users/amtsurkov/exercise/hw-3.
В папку копируете данный фаил.
Отвечаете по памяти, записывает свои ответы в фаил и комитите его.
Далее смотрите материалы, задает вопросы чату джипити, гуглу и т д.
И расширяете или меняете ответы на эти вопросы.
Опять комитите и пушите в репозиторий.

- С какой целью стоит изучать программирование?
1. Что бы не было альцгеймера.
2.
•Решение задач. Развает сильные навыки решения проблем - логическое мышление.
•Автоматизация. Можно автоматизировать повторяющиеся задачи, экономя время и силы.
•Креативность и инновации. Творческий процесс, который позволяет воплощать свои идеи в жизнь.
•Непрерывное обучение.
•Работа в команде. Общение.

- Что такое программа?
1. То с помощью чего мы общаемся (даём команды) с компьютером.
2. Это описание на понятном компьютеру языке последовательности действий, которые нужно выполнить над данными для решения конкретной задачи.

- Зачем нужно уметь работать в консоли(командной строке - терминале)?
1. Есть на любом сервере и компьютере. 
2. Командная строка — текстовый интерфейс пользователя для взаимодействия с операционной системой компьютера и/или другим программным обеспечением с помощью команд, вводимых с клавиатуры. С его помощью пользователь может запускать и отключать другие программы, системные процессы, редактировать реестр, управлять файлами и папками, а также программировать с использованием встроенного скриптового языка. Интерфейс командной строки обеспечивает пользователя всеми возможностями для полноценного взаимодействия с компьютером. Большинство фреймворков ставятся и управляются из командной строки. 

- Что такое программа?
1. Набор команд.
2. Программа – это набор инструкций, написанных на языке программирования, которые выполняют определенную задачу на компьютере или другом устройстве. 

- Зачем нужен язык программирования?
1. Программировать.
2. Язык программирования предназначен для написания компьютерных программ, которые представляют собой набор правил, позволяющих компьютеру выполнить тот или иной вычислительный процесс, организовать управление различными объектами, и т. п.

- Какие принципы из философии Python вы помните? Прочитайте эти принципы еще раз и попробуйте по памяти их написать.
1. Простое лучше, чем сложное.
2.
Красивое лучше, чем уродливое.
Явное лучше, чем неявное.
Простое лучше, чем сложное.
Сложное лучше, чем запутанное.
Плоское лучше, чем вложенное.
Разреженное лучше, чем плотное.
Читаемость имеет значение.
Особые случаи не настолько особые, чтобы нарушать правила.
При этом практичность важнее безупречности.
Ошибки никогда не должны замалчиваться.
Если они не замалчиваются явно.
Встретив двусмысленность, отбрось искушение угадать.
Должен существовать один и, желательно, только один очевидный способ сделать это.
Хотя он поначалу может быть и не очевиден, если вы не голландец [^1].
Сейчас лучше, чем никогда.
Хотя никогда зачастую лучше, чем прямо сейчас.
Если реализацию сложно объяснить — идея плоха.
Если реализацию легко объяснить — идея, возможно, хороша.
Пространства имён — отличная штука! Будем делать их больше! 

- Почему выбрали Python?
1. Самый популярный язык.
2. Простой синтаксис, широкий спектр применения, активное онлайн-сообщество, разнообразные библиотеки и фреймворки для решения различных задач, отличная документация, потенциал роста, кроссплатформенная гибкость — код, написанный на одной платформе, может быть выполнен на другой без изменений.

- Что такое Jupyter Notebook?
1. Среда разработки.
2. Это программа-блокнот для записи, передачи и запуска кода

- Какие типы данных вы помнинте?
1. Список, кортеж, словарь, строка, чисто целое, bool, число с точкой, файл.
2. + Множество

- Какие есть математические операции в языке python?
1. Деление, умножение, сложение, вычитание, диление без остатка, отстаток от делания.
2. + возведение в степень.

- Какие операции с строками есть в языке python
1. Сложкние, перенос, срез.
2.
Дублирование (оператор *).
Размножает строковый фрагмент указанное число раз.
Преобразование в строку.
Вычисление длины строки.
Проверка наличия подстроки в строке (оператор in).
Сравнение строк (операторы ==, !=, >, <).