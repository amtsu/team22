Задание: Ответьте письмено на вопросы дважды!
Выполнять это задание следует следующим образом.
Создаете папку аналогичную ~/github/tem22/users/amtsurkov/exercise/hw-3.
В папку копирует данный фаил.
Отвечаете по памямти, записывает свои ответы в фаил и комитите его.
Далее смотрите материалы, задает вопросы чату джипити, гуглу и т д.
И расширяете или меняте ответы на эти вопросы.
Опять комититие и пушите в репозиторий.

- С какой целью стоит изучать программирование?

    Развивать работу мозгов, найти новую работу, можно использовать почти в любой текущей работе, чтобы улучшить ускорить или автоматизировать ее

    Расширенный ответ: 
        Программирование это творчество, развивает полезные привычки (упорство, внимательность), Развивает интеллект и алгоритмического
    мышления, Для изучения иностранных языков, для самооценки, Профессиональное развитие и карьерные перспективы, Учит решать проблемы.

- Что такое программа?

    инструкция для вычислительной машины

    Расширенный ответ: 
        Компьютерная програ́мма — 1) комбинация компьютерных инструкций и данных, позволяющая аппаратному обеспечению вычислительной системы 
    выполнять вычисления или функции управления

- Зачем нужно уметь работать в консоли(командной строке - терминале)?

    большая часть серверов, компьютеров и тд, на которое ставятся программы виртуальные среды и прочее  работают под юникс системой
    и соответственно любое действие по установке нужного ПО или написанного нами по или настройки вирутальных сред выполняется в командной строке

    Расширенный ответ: 
        Большинство фреймворков ставятся и управляются из командной строки.
        для установки всего серверного инструментария, например PHP, Apache и MySQL;
        для работы с API и запросами;
        для настройки серверного окружения и разграничения доступа;
        для работы с репозиториями и для создания резервных копий проектов;
        для тестирования сервера под нагрузкой;
        для получения логов для анализа работы серверной части.
    Также: 
        Диагностика ПК, восстановаление системы, работа с дисками, работа с системой, с сетевыми подключениями, 



!!!уже было!!! - Что такое программа?

- Зачем нужен язык программирования?

    чтобы был набор базовых инструментов с помощью которых можно перевести идеи человека на язык общения с компьютером на разных уровнях

    Расширенный ответ:
        Язык программирования предназначен для написания компьютерных программ, которые представляют собой набор правил, позволяющих компьютеру 
    выполнить тот или иной вычислительный процесс, организовать управление различными объектами, и т. п. Язык программирования отличается от 
    естественных языков тем, что предназначен для управления ЭВМ, в то время как естественные языки используются, прежде всего, для общения людей между 
    собой. Большинство языков программирования использует специальные конструкции для определения и манипулирования структурами данных и управления 
    процессом вычислений.

- Какие принципы из философии Python вы поомните? Прочитайте эти принципы еще раз и попробуйте по памяти их напсиать.

    читаемо
    не замалчивать ошибки
    лучше сейчас чем никогда
    просто лучше чем сложно
    
    Расширенный ответ:
        Красивое лучше уродливого.
        Явное лучше неявного.
        Простое лучше сложного.
        Сложное лучше запутанного.
        Развернутое лучше вложенного.
        Разреженное лучше плотного.
        Читаемость имеет значение.
        Особые случаи не настолько особые, чтобы нарушать правила.
        При этом практичность важнее безупречности.
        Ошибки не должны замалчиваться.
        Если не замалчиваются явно.
        Встретив двусмысленность, отбрось искушение угадать.
        Должен существовать один - и, желательно, только один – очевидный способ сделать что-то.
        Хотя этот способ поначалу может быть и не очевиден, если вы не голландец.
        Сейчас лучше, чем никогда.
        Хотя никогда часто лучше, чем *прямо* сейчас.
        Если реализацию сложно объяснить – идея точно плоха.
        Если реализацию легко объяснить – возможно, идея хороша.
        Пространства имен – отличная штука! Будем использовать их чаще!

- Почему выбрали Python?

    Максимально разносторонний язык, с помощью которого потом можно решать различные задачи. 
    Также хочется не полностью погружаться и быть разработчиком, а быть где-то на стыке, чтобы питон был как инструмент для интереных задач

    Расширенный ответ:
        Простота синтаксиса        
        Расширяемость и гибкость.
        Интерпретируемость и кроссплатформенность. 
        Стандартизированность. 
        Open Source.
        Сильное комьюнити и конференции.
        Широта применения.
        Востребованность на рынке труда и поддержка гигантами IT-сферы.

- Что такое Jupyter Notebook?

    программа в которой можно удобно выполнять питоновский код как целиком так и частями с хорошей визуализацией и простотой обращения

    Расширенный ответ:
        Интерактивный блокнот — подход к построению пользовательского интерфейса интерактивной вычислительной среды, объединяющий в одном окне работу 
    с кодом (в том числе редактор с подсветкой синтаксиса), исходными данными и результатом вычислений и сформированной графикой — в едином 
    редактируемом документе, называемом блокнотом

- Какие типы данных вы понминте?

    str, int, float, Bool, list, set, tuple, dict, none (делятся на изменяемые и неизменяемые)

- Какие есть математические операции в языке python?

    сложение, умножение, деление, вычитание, деление нацело, остаток от деления, возведение в степень

- Какие операции с строками есть в языке python

    Конкатенация, умножение, срез, доступ поэлементно, сделтаь заглавными или строчными буквами, узнать длину строки 

    Расширенный ответ:
        len() - Получение длины строки. 
        string[:] - Извлечение подстроки из строки.
        in - Поиск символов и подстрок в строке.
        string[] - доступ по индексу.
        string.replace() - Замена символов и подстрок в строке.
        + - Разделение строки на части и объединение строк в одну.
        f' {var1} text {var2} text' - f строка 
        string.lower() string.upper() string.capitalize() string.swapcase() string.title() - Форматирование строк для вывода информации в нужном виде.
        chr() - Целое число в символ 
        ord() - Символ в целое число 
        * - повторение поэлементно
        str() - типо объекта на строку
        string.count() - подсчет количества вхождений подстроки
        string.find() - поиск подтсроки
        выравнивание строк, отступы
        проверка на то буквенная ли строка, какого регистра и тд
        string.join(<iterable>) - объединяет список в строку
        string.partition(<sep>) - делит строку на основе разделителя