name: Price_bot CI/CD

on:
  push:
    branches:
      - price_bot_develop
  # pull_request:
  #   branches:
  #     - price_bot_develop

jobs:
    build_and_test:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.9'

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r library/projects/Price_bot/requirements.txt

        - name: Test with flake8
          run: |
            pip install flake8 pep8-naming flake8-broken-line flake8-return
            python -m flake8 library/projects/Price_bot

    build_and_push_to_docker_hub:
        name: Build and push Docker image to Docker Hub
        runs-on: ubuntu-latest
        needs: build_and_test
        steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: library/projects/Price_bot
            tags: ${{ secrets.DOCKER_USERNAME }}/price_bot:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build_and_push_to_docker_hub
        steps:
            - name: executing remote ssh commands to deploy
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.SERVER_HOST }}
                username: ${{ secrets.SERVER_USER }}
                key: ${{ secrets.SERVER_SSH_KEY }}
                passphrase: ${{ secrets.SERVER_PASSPHRASE }}
                script: |
                  sudo docker-compose stop
                  sudo docker system prune -f
                  sudo docker-compose rm bot
                  sudo docker pull ${{ secrets.DOCKER_USERNAME }}/price_bot:latest
                  rm .env
                  touch .env
                  echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> .env
                  echo DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} >> .env
                  sudo docker-compose up -d
     